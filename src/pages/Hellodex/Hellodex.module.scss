@use 'sass:math';
@use 'config/colors';
@use 'config/fonts';
@use 'functions/color';
@use 'mixins/aria';
@use 'mixins/flex';
@use 'mixins/font';
@use 'mixins/media';
@use 'mixins/position';
@use 'mixins/spacing';
@use 'mixins/transition';

.container {
  @include position.absolute-fill;
  @include transition.apply(background-color);
  overflow: hidden;

  &.light {
    color: colors.$black;
    background-color: color.alpha(colors.$showdown-background-light, 0.85);
  }

  &.dark {
    color: colors.$white;
    background-color: color.alpha(#121212, 0.8);
  }
}

.content {
  @include position.absolute-fill;
  @include flex.column($justify: space-between);
  @include font.apply(fonts.$primary);
  font-size: 12px;
  z-index: 1;
}

.verySmol .hideWhenSmol {
  display: none;
}

.showdexIcon {
  @include position.absolute-anchor($x: 50%, $y: -5em, $y-prop: bottom);
  width: 22em;
  @include transition.apply(opacity);
  pointer-events: none;

  .light & {
    opacity: 0.75;
  }

  .dark & {
    opacity: 0.85;
  }
}

.topContent {
  flex: 1;
  width: 100%;
  @include spacing.padding-xy($x: 25px);
}

.banner {
  position: relative;
  @include flex.column-center;
  @include spacing.padding($top: 30px);
  text-align: center;
  user-select: none;
}

.authors {
  @include flex.row-center;
  font-weight: 300;
  font-size: 12px;
  text-transform: uppercase;
  opacity: 0.75;
}

.ampersand {
  @include spacing.margin($x: 10px);
}

.authorButton {
  @include font.apply(fonts.$primary);
  color: inherit;

  .label {
    @include spacing.margin($right: -0.2em);
    font-size: 12px;
    color: inherit;
    letter-spacing: 0.2em;
    text-transform: uppercase;
  }
}

.presents {
  @include spacing.margin($right: -0.2em);
  font-weight: 300;
  font-size: 12px;
  letter-spacing: 0.2em;
  text-transform: uppercase;
  opacity: 0.75;
}

.extensionName {
  @include spacing.margin($right: -0.2em);
  font-weight: 700;
  font-size: 40px;
  color: colors.$transparent;
  letter-spacing: 0.2em;
  text-transform: uppercase;
  text-shadow: 0 0 15px color.alpha(colors.$black, 0.3);
  background: linear-gradient(65deg, #4A9AC7 1%, #F148CC 99%) 0 0 / 100% 100%;
  background-clip: text;
  @include transition.apply(
    (margin-right, 10s),
    (letter-spacing, 10s),
    (background-position, 10s),
    (background-size, 10s),
  );

  &:hover {
    @include spacing.margin($right: -0.5em);
    letter-spacing: 0.5em;
    background-position: 50% 0;
    background-size: 200% 100%;
  }
}

.extensionVersion {
  @include spacing.margin($right: -0.15em);
  @include font.apply(fonts.$mono);
  font-size: 10px;
  letter-spacing: 0.15em;
  // text-indent: 0.15em;
  opacity: 0.65;

  .extensionVersionSuffix {
    opacity: 0.5;
  }
}

.instancesContainer {
  position: relative;
}

.instancesContent {
  position: relative;
  width: 100%;
  height: 32vh;
  @include spacing.margin($y: 24px);
  border-radius: 16px;
  overflow: hidden;
  @include transition.apply(height, background-color, box-shadow);

  @include media.for-min-height(1000px) {
    height: 48vh;
  }

  &.hiddenDonation {
    height: 52vh;

    @include media.for-min-height(1000px) {
      height: 58vh;
    }

    @include media.for-min-height(1200px) {
      height: 62vh;
    }

    @include media.for-max-height(850px) {
      height: 42vh;
    }

    @include media.for-max-height(750px) {
      height: 36vh;
    }
  }

  .light & {
    background-color: color.alpha(colors.$white, 0.65);
    box-shadow: (
      0 0 1px color.alpha(colors.$black, 0.15),
      0 0 15px color.alpha(colors.$gray-dark, 0.15),
    );
  }

  .dark & {
    background-color: color.alpha(colors.$black, 0.5);
    box-shadow: (
      0 0 1px color.alpha(colors.$white, 0.3),
      0 0 15px color.alpha(colors.$black, 0.5),
    );
  }
}

.battleRecord {
  @include position.absolute-anchor($x: 50%, $y: -18px, $y-prop: bottom);
}

.scrollableInstances {
  height: 100%;
  @include spacing.padding-all(10px);
}

.instances {
  position: relative;
  display: grid;
  grid-template-columns: repeat(3, minmax(0, 1fr));
  grid-auto-rows: 53px;
  column-gap: 10px;
  row-gap: 10px;
  width: 100%;
  height: 100%;

  .verySmol & {
    grid-template-columns: minmax(0, 1fr);
  }
}

.instanceButton {
  grid-area: span 1 / span 1;
}

div.newHonkButton {
  border-radius: 12px;
  @include aria.outline($radius: 12px);

  &::before {
    border-radius: 12px;
  }
}

.battleRecordSpacer {
  grid-area: span 1 / span 3;
  height: 20px;

  .verySmol & {
    grid-area: span 1 / span 1;
  }
}

.empty {
  @include position.absolute-fill;
  @include flex.column-center;
  user-select: none;

  .emptyIcon {
    width: 30px;
    min-width: 30px;
    @include spacing.margin($bottom: 10px);
    opacity: 0.32;
  }

  .emptyLabel {
    max-width: 215px;
    font-size: 12px;
    letter-spacing: 0.1px;
    text-align: center;
    line-height: 15px;
    opacity: 0.64;

    strong {
      font-weight: 600;
    }
  }

  .divider {
    @include flex.row-center;
    @include spacing.margin($y: 16px);

    .dividerLine {
      width: 56px;
      height: 1px;
      opacity: 0.08;
      @include transition.apply(background-color);

      .light & {
        background-color: colors.$black;
      }

      .dark & {
        background-color: colors.$white;
      }
    }

    .dividerLabel {
      @include spacing.padding($x: 12px);
      // font-style: italic;
      letter-spacing: 0.1px;
      opacity: 0.32;
    }
  }
}

.honkButton {
  @include spacing.margin($top: 4px, $x: auto);
}

button.spectateButton {
  @include font.apply(fonts.$primary, ( font-weight: 600 )); // same font-weight as .emptyLabel strong
  font-size: 12px;
  color: inherit;

  &.disabled {
    opacity: 1;
  }

  .spectateButtonLabel {
    font-size: inherit;
    color: inherit;
  }
}

.donations {
  @include spacing.margin($x: auto);
  font-size: 10px;
  text-align: center;
  line-height: 14px;
  user-select: none;

  &.withBattleRecord {
    @include spacing.margin($top: 40px);
  }
}

.donateButton {
  @include spacing.margin($right: auto, $left: auto);
}

.donateFootnote {
  max-width: 250px + 10px;
  @include spacing.padding($all: 6px);
  @include spacing.margin($top: 15px, $x: auto);
  letter-spacing: 0.05px;
  backdrop-filter: blur(3px);
  border-radius: 5px;
  opacity: 0.64;
  @include transition.apply(opacity);

  &.withTitle {
    opacity: 0.4;
  }
}

.footer {
  position: relative;
  @include flex.row-between;
  flex: 0 0 73px;
  width: 100%;
  height: 73px;
  @include spacing.padding($x: 25px);
  backdrop-filter: blur(3px);
  border-top: 2px solid;
  @include transition.apply(background-color, border-top-color);
  z-index: 1;

  .verySmol & {
    justify-content: center;
  }

  .light & {
    background-color: color.alpha(colors.$white, 0.75);
    border-top-color: color.alpha(colors.$white, 0.15);
  }

  .dark & {
    background-color: color.alpha(colors.$black, 0.7);
    border-top-color: color.alpha(#121212, 0.15);
  }
}

.links {
  @include flex.row($align: center);

  .light & {
    color: colors.$gray-dark;
  }
}

.linkItem {
  &:not(:last-child) {
    @include spacing.margin($right: 25px);

    .verySmol & {
      @include spacing.margin($right: 15px);
    }
  }
}

.settingsButton {
  width: 50px;
  height: 45px;

  // bad idea, looks weird on non-Retina displays while changing color
  // .settingsIcon {
  //   @include transition.apply((transform, 10s));
  // }

  // &:hover .settingsIcon {
  //   transform: rotateZ(360deg);
  // }
}

.linkSeparator {
  width: 1px;
  height: 28px;
  @include transition.apply(background-color);

  .light & {
    background-color: color.alpha(#121212, 0.15);
  }

  .dark & {
    background-color: color.alpha(colors.$white, 0.15);
  }
}

.linkButton {
  width: 45px;
  height: 45px;

  .light & {
    color: color.alpha(colors.$black, 0.75);
  }

  .dark & {
    color: color.alpha(colors.$white, 0.75);
  }

  .settingsVisible & {
    .light & {
      opacity: 0.5;
    }

    .dark & {
      opacity: 0.5;
    }
  }

  .signpostIcon {
    transform: scale(0.9);
  }

  // .sparkleIcon {
  //   transform: scale(0.9);
  // }

  // .bugIcon {
  //   transform: rotateZ(90deg);
  // }

  // .clipboardIcon {
  //   transform: scale(0.85);
  // }
}

.linkButtonLabel {
  @include spacing.margin($right: -0.01px);
  letter-spacing: 0.01px;
}

.credits {
  font-size: 10px;
  text-align: right;
  opacity: 0.6;
  user-select: none;
}

// note: don't use position.absolute-anchor() here cause the BaseButton's
// react-spring will add an inline transform property
.tizeButton {
  @include position.absolute($top: -33%, $right: 25px);
  color: inherit;
  opacity: 0.6;
  @include transition.apply(color, opacity);

  .light & {
    color: colors.$gray-dark;
    opacity: 1;
  }

  &:hover {
    color: colors.$blue;
    opacity: 1;
  }
}

.tizeLogo {
  height: 35px;
  min-height: 35px;
}
