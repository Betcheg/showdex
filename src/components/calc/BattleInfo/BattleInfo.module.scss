@use 'config/colors';
@use 'config/fonts';
@use 'functions/color';
@use 'mixins/flex';
@use 'mixins/font';
@use 'mixins/spacing';
@use 'mixins/transition';

.container {
  display: grid;
  grid-template-columns: minmax(0, 0.25fr) minmax(0, 0.25fr) minmax(150px, 1fr);
  column-gap: 12px;
  align-content: center;
  @include spacing.padding($all: 12px, $top: 10px);
  border-radius: 12px;
  // @include transition.apply(background-color, box-shadow);
  @include transition.apply(box-shadow);

  &.verySmol {
    grid-template-columns: repeat(2, minmax(100px, 1fr));
    row-gap: 10px;
  }

  &.light {
    // background-color: color.alpha(colors.$white, 0.48);
    box-shadow: (
      0 0 1px color.alpha(colors.$black, 0.16),
      0 0 8px color.alpha(colors.$gray-dark, 0.16),
    );
  }

  &.dark {
    // background-color: color.alpha(#121212, 0.4);
    box-shadow: (
      0 0 1px color.alpha(colors.$white, 0.32),
      0 0 8px color.alpha(colors.$black, 0.48),
    );
  }
}

.tooltipContent {
  position: relative;
  text-align: center;
  white-space: normal;
  user-select: none;
}

button.toggleButton {
  font-size: 8px;
}

.labelContainer {
  @include flex.row($align: center);
  @include spacing.margin($bottom: 4px, $left: 5px);

  button.toggleButton {
    @include spacing.margin($left: 8px);
  }
}

.dropdownLabel {
  @include font.apply(fonts.$primary, ( font-weight: 500 ));
  text-transform: uppercase;
  user-select: none;
  @include transition.apply(color);

  .light & {
    color: color.alpha(colors.$black, 0.8);
  }

  .dark & {
    color: color.alpha(colors.$white, 0.8);
  }
}

.honkInfo {
  @include flex.row($align: center);

  .verySmol & {
    grid-area: 2 / span 2;
  }
}

.honkName {
  @include spacing.padding($x: 2px);
  @include font.apply(fonts.$primary, ( font-weight: 500 ));
  font-size: 14px;
  letter-spacing: 0.1px;
  line-height: 15px;
}

.honkStatus {
  @include spacing.margin($left: 8px);
  @include font.apply(fonts.$mono);
  font-size: 10px;
  line-height: 11px;
  opacity: 0.64;
  user-select: none;
  @include transition.apply(color);

  &.saved {
    .light & {
      color: color.shade(colors.$green, 16%);
    }

    .dark & {
      color: colors.$green;
    }
  }
}
